{"ast":null,"code":"var _jsxFileName = \"E:\\\\Downloads\\\\MernStack-Tour-Management-main\\\\tour-management\\\\frontend\\\\src\\\\components\\\\Payment\\\\Payment.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentComponent = () => {\n  _s();\n  const navigate = useNavigate(); // Use the useNavigate hook\n\n  const handlePayment = async () => {\n    try {\n      // Step 1: Get the order from the backend\n      const {\n        data\n      } = await axios.post('http://localhost:4000/api/v1/payment', {\n        amount: 500\n      }); // amount in INR\n\n      // Step 2: Use Razorpay checkout\n      const options = {\n        key: process.env.RAZORPAY_KEY_ID,\n        // Test Mode Key ID from .env file\n        amount: data.amount,\n        currency: data.currency,\n        name: \"Your Project Name\",\n        description: \"Payment for XYZ\",\n        order_id: data.id,\n        // This is the order ID created in backend\n        handler: async function (response) {\n          // Step 3: Verify the payment on the backend\n          const paymentData = {\n            razorpay_order_id: response.razorpay_order_id,\n            razorpay_payment_id: response.razorpay_payment_id,\n            razorpay_signature: response.razorpay_signature\n          };\n          const verifyPayment = await axios.post('http://localhost:4000/api/v1/payment/verify', paymentData);\n          if (verifyPayment.data.status === \"success\") {\n            // Redirect to the Thank You page\n            navigate('/thank-you'); // Navigate to Thank You page on success\n          } else {\n            alert(\"Payment verification failed\");\n          }\n        },\n        prefill: {\n          name: \"John Doe\",\n          email: \"johndoe@example.com\",\n          contact: \"9999999999\"\n        },\n        notes: {\n          address: \"Razorpay Corporate Office\"\n        },\n        theme: {\n          color: \"#F37254\"\n        }\n      };\n      const rzp = new window.Razorpay(options);\n      rzp.open();\n    } catch (error) {\n      console.error(\"Payment Error: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePayment,\n      children: \"Pay Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentComponent, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = PaymentComponent;\nexport default PaymentComponent;\nvar _c;\n$RefreshReg$(_c, \"PaymentComponent\");","map":{"version":3,"names":["React","axios","useNavigate","jsxDEV","_jsxDEV","PaymentComponent","_s","navigate","handlePayment","data","post","amount","options","key","process","env","RAZORPAY_KEY_ID","currency","name","description","order_id","id","handler","response","paymentData","razorpay_order_id","razorpay_payment_id","razorpay_signature","verifyPayment","status","alert","prefill","email","contact","notes","address","theme","color","rzp","window","Razorpay","open","error","console","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Downloads/MernStack-Tour-Management-main/tour-management/frontend/src/components/Payment/Payment.jsx"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst PaymentComponent = () => {\r\n  const navigate = useNavigate(); // Use the useNavigate hook\r\n\r\n  const handlePayment = async () => {\r\n    try {\r\n      // Step 1: Get the order from the backend\r\n      const { data } = await axios.post('http://localhost:4000/api/v1/payment', { amount: 500 }); // amount in INR\r\n\r\n      // Step 2: Use Razorpay checkout\r\n      const options = {\r\n        key: process.env.RAZORPAY_KEY_ID, // Test Mode Key ID from .env file\r\n        amount: data.amount,\r\n        currency: data.currency,\r\n        name: \"Your Project Name\",\r\n        description: \"Payment for XYZ\",\r\n        order_id: data.id, // This is the order ID created in backend\r\n        handler: async function (response) {\r\n          // Step 3: Verify the payment on the backend\r\n          const paymentData = {\r\n            razorpay_order_id: response.razorpay_order_id,\r\n            razorpay_payment_id: response.razorpay_payment_id,\r\n            razorpay_signature: response.razorpay_signature,\r\n          };\r\n\r\n          const verifyPayment = await axios.post('http://localhost:4000/api/v1/payment/verify', paymentData);\r\n\r\n          if (verifyPayment.data.status === \"success\") {\r\n            // Redirect to the Thank You page\r\n            navigate('/thank-you'); // Navigate to Thank You page on success\r\n          } else {\r\n            alert(\"Payment verification failed\");\r\n          }\r\n        },\r\n        prefill: {\r\n          name: \"John Doe\",\r\n          email: \"johndoe@example.com\",\r\n          contact: \"9999999999\",\r\n        },\r\n        notes: {\r\n          address: \"Razorpay Corporate Office\",\r\n        },\r\n        theme: {\r\n          color: \"#F37254\",\r\n        },\r\n      };\r\n\r\n      const rzp = new window.Razorpay(options);\r\n      rzp.open();\r\n\r\n    } catch (error) {\r\n      console.error(\"Payment Error: \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handlePayment}>Pay Now</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMM,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF;MACA,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,sCAAsC,EAAE;QAAEC,MAAM,EAAE;MAAI,CAAC,CAAC,CAAC,CAAC;;MAE5F;MACA,MAAMC,OAAO,GAAG;QACdC,GAAG,EAAEC,OAAO,CAACC,GAAG,CAACC,eAAe;QAAE;QAClCL,MAAM,EAAEF,IAAI,CAACE,MAAM;QACnBM,QAAQ,EAAER,IAAI,CAACQ,QAAQ;QACvBC,IAAI,EAAE,mBAAmB;QACzBC,WAAW,EAAE,iBAAiB;QAC9BC,QAAQ,EAAEX,IAAI,CAACY,EAAE;QAAE;QACnBC,OAAO,EAAE,eAAAA,CAAgBC,QAAQ,EAAE;UACjC;UACA,MAAMC,WAAW,GAAG;YAClBC,iBAAiB,EAAEF,QAAQ,CAACE,iBAAiB;YAC7CC,mBAAmB,EAAEH,QAAQ,CAACG,mBAAmB;YACjDC,kBAAkB,EAAEJ,QAAQ,CAACI;UAC/B,CAAC;UAED,MAAMC,aAAa,GAAG,MAAM3B,KAAK,CAACS,IAAI,CAAC,6CAA6C,EAAEc,WAAW,CAAC;UAElG,IAAII,aAAa,CAACnB,IAAI,CAACoB,MAAM,KAAK,SAAS,EAAE;YAC3C;YACAtB,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;UAC1B,CAAC,MAAM;YACLuB,KAAK,CAAC,6BAA6B,CAAC;UACtC;QACF,CAAC;QACDC,OAAO,EAAE;UACPb,IAAI,EAAE,UAAU;UAChBc,KAAK,EAAE,qBAAqB;UAC5BC,OAAO,EAAE;QACX,CAAC;QACDC,KAAK,EAAE;UACLC,OAAO,EAAE;QACX,CAAC;QACDC,KAAK,EAAE;UACLC,KAAK,EAAE;QACT;MACF,CAAC;MAED,MAAMC,GAAG,GAAG,IAAIC,MAAM,CAACC,QAAQ,CAAC5B,OAAO,CAAC;MACxC0B,GAAG,CAACG,IAAI,CAAC,CAAC;IAEZ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACzC;EACF,CAAC;EAED,oBACEtC,OAAA;IAAAwC,QAAA,eACExC,OAAA;MAAQyC,OAAO,EAAErC,aAAc;MAAAoC,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAAC3C,EAAA,CA3DID,gBAAgB;EAAA,QACHH,WAAW;AAAA;AAAAgD,EAAA,GADxB7C,gBAAgB;AA6DtB,eAAeA,gBAAgB;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}